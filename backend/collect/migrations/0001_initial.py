# Generated by Django 4.2.10 on 2024-05-26 17:35

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gsearch', '0001_initial'),
        ('animal', '0006_alter_animal_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modificado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('dt_collection', models.DateField(blank=True)),
                ('animal', models.CharField(blank=True, max_length=30)),
                ('latitude', models.CharField(blank=True, max_length=30)),
                ('longitude', models.CharField(blank=True, max_length=30)),
                ('score', models.IntegerField(blank=True)),
                ('serum', models.BooleanField(blank=True)),
                ('plasma', models.BooleanField(blank=True)),
                ('marrow_aspirate', models.BooleanField(blank=True)),
                ('lymph_node_aspirate', models.BooleanField(blank=True)),
                ('lymph_node_aspirate_dna', models.BooleanField(blank=True)),
                ('strains', models.BooleanField(blank=True)),
                ('dna_strains', models.BooleanField(blank=True)),
                ('parasite_slide', models.CharField(blank=True, max_length=10)),
                ('location_slide', models.CharField(blank=True, max_length=20)),
                ('parasite_culture', models.CharField(blank=True, max_length=20)),
                ('location_culture', models.CharField(blank=True, max_length=20)),
                ('sorology_rifi', models.CharField(blank=True, max_length=10)),
                ('dilution', models.IntegerField(blank=True)),
                ('sorology_dpp', models.CharField(blank=True, max_length=10)),
                ('fiocruz_elisa', models.CharField(blank=True, max_length=10)),
                ('biomanguinhos_elisa', models.CharField(blank=True, max_length=10)),
                ('general_state', models.IntegerField(blank=True)),
                ('ecto_paras', models.IntegerField(blank=True)),
                ('nutritional_status', models.IntegerField(blank=True)),
                ('observation', models.CharField(blank=True, max_length=200)),
                ('nails', models.IntegerField(blank=True)),
                ('mucous_coloring', models.IntegerField(blank=True)),
                ('muzzle_injury', models.IntegerField(blank=True)),
                ('observation_muzzle_injury', models.CharField(blank=True, max_length=200)),
                ('ear_injury', models.IntegerField(blank=True)),
                ('observation_ear_injury', models.CharField(blank=True, max_length=200)),
                ('lymph_node', models.IntegerField(blank=True)),
                ('observation_lymph_node', models.CharField(blank=True, max_length=200)),
                ('blepharitis', models.IntegerField(blank=True)),
                ('conjunctivitis', models.IntegerField(blank=True)),
                ('observation_conjuntivitis', models.CharField(blank=True, max_length=200)),
                ('bleeding', models.IntegerField(blank=True)),
                ('skin_injury', models.IntegerField(blank=True)),
                ('observation_skin_injury', models.IntegerField(blank=True)),
                ('muzzle_depigmentation', models.IntegerField(blank=True)),
                ('lip_depigmentation', models.IntegerField(blank=True)),
                ('id_animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animal', to='animal.animal')),
                ('id_search_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gsearch', to='gsearch.gsearch')),
            ],
            options={
                'verbose_name': 'Collect',
                'verbose_name_plural': 'Collects',
                'ordering': ('dt_collection',),
            },
        ),
    ]
